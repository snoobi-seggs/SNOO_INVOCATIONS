// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MusicBriefInfo.proto

package emu.grasscutter.net.proto;

public final class MusicBriefInfoOuterClass {
  private MusicBriefInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MusicBriefInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MusicBriefInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 import_from_ugc_guid = 5;</code>
     * @return The importFromUgcGuid.
     */
    long getImportFromUgcGuid();

    /**
     * <code>bool can_share = 8;</code>
     * @return The canShare.
     */
    boolean getCanShare();

    /**
     * <code>bool settle = 1;</code>
     * @return The settle.
     */
    boolean getSettle();

    /**
     * <code>uint32 music_id = 2;</code>
     * @return The musicId.
     */
    int getMusicId();

    /**
     * <code>uint32 save_page_type = 1182;</code>
     * @return The savePageType.
     */
    int getSavePageType();

    /**
     * <code>uint32 position = 12;</code>
     * @return The position.
     */
    int getPosition();

    /**
     * <code>string author_nickname = 10;</code>
     * @return The authorNickname.
     */
    java.lang.String getAuthorNickname();
    /**
     * <code>string author_nickname = 10;</code>
     * @return The bytes for authorNickname.
     */
    com.google.protobuf.ByteString
        getAuthorNicknameBytes();

    /**
     * <code>uint32 version = 15;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <code>uint32 create_time = 3;</code>
     * @return The createTime.
     */
    int getCreateTime();

    /**
     * <code>repeated uint32 after_note_list = 1002;</code>
     * @return A list containing the afterNoteList.
     */
    java.util.List<java.lang.Integer> getAfterNoteListList();
    /**
     * <code>repeated uint32 after_note_list = 1002;</code>
     * @return The count of afterNoteList.
     */
    int getAfterNoteListCount();
    /**
     * <code>repeated uint32 after_note_list = 1002;</code>
     * @param index The index of the element to return.
     * @return The afterNoteList at the given index.
     */
    int getAfterNoteList(int index);

    /**
     * <code>repeated uint32 before_note_list = 982;</code>
     * @return A list containing the beforeNoteList.
     */
    java.util.List<java.lang.Integer> getBeforeNoteListList();
    /**
     * <code>repeated uint32 before_note_list = 982;</code>
     * @return The count of beforeNoteList.
     */
    int getBeforeNoteListCount();
    /**
     * <code>repeated uint32 before_note_list = 982;</code>
     * @param index The index of the element to return.
     * @return The beforeNoteList at the given index.
     */
    int getBeforeNoteList(int index);

    /**
     * <code>bool is_psn_platform = 9;</code>
     * @return The isPsnPlatform.
     */
    boolean getIsPsnPlatform();

    /**
     * <code>uint32 time_line_edit_time = 1822;</code>
     * @return The timeLineEditTime.
     */
    int getTimeLineEditTime();

    /**
     * <code>bool is_changed_after_publish = 11;</code>
     * @return The isChangedAfterPublish.
     */
    boolean getIsChangedAfterPublish();

    /**
     * <code>uint32 share_time = 13;</code>
     * @return The shareTime.
     */
    int getShareTime();

    /**
     * <code>uint32 max_score = 14;</code>
     * @return The maxScore.
     */
    int getMaxScore();

    /**
     * <code>uint32 real_time_edit_time = 576;</code>
     * @return The realTimeEditTime.
     */
    int getRealTimeEditTime();

    /**
     * <code>uint32 music_note_count = 7;</code>
     * @return The musicNoteCount.
     */
    int getMusicNoteCount();

    /**
     * <code>uint64 music_share_id = 4;</code>
     * @return The musicShareId.
     */
    long getMusicShareId();

    /**
     * <code>uint32 score = 6;</code>
     * @return The score.
     */
    int getScore();
  }
  /**
   * Protobuf type {@code MusicBriefInfo}
   */
  public static final class MusicBriefInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MusicBriefInfo)
      MusicBriefInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MusicBriefInfo.newBuilder() to construct.
    private MusicBriefInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MusicBriefInfo() {
      authorNickname_ = "";
      afterNoteList_ = emptyIntList();
      beforeNoteList_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MusicBriefInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MusicBriefInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              settle_ = input.readBool();
              break;
            }
            case 16: {

              musicId_ = input.readUInt32();
              break;
            }
            case 24: {

              createTime_ = input.readUInt32();
              break;
            }
            case 32: {

              musicShareId_ = input.readUInt64();
              break;
            }
            case 40: {

              importFromUgcGuid_ = input.readUInt64();
              break;
            }
            case 48: {

              score_ = input.readUInt32();
              break;
            }
            case 56: {

              musicNoteCount_ = input.readUInt32();
              break;
            }
            case 64: {

              canShare_ = input.readBool();
              break;
            }
            case 72: {

              isPsnPlatform_ = input.readBool();
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              authorNickname_ = s;
              break;
            }
            case 88: {

              isChangedAfterPublish_ = input.readBool();
              break;
            }
            case 96: {

              position_ = input.readUInt32();
              break;
            }
            case 104: {

              shareTime_ = input.readUInt32();
              break;
            }
            case 112: {

              maxScore_ = input.readUInt32();
              break;
            }
            case 120: {

              version_ = input.readUInt32();
              break;
            }
            case 4608: {

              realTimeEditTime_ = input.readUInt32();
              break;
            }
            case 7856: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                beforeNoteList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              beforeNoteList_.addInt(input.readUInt32());
              break;
            }
            case 7858: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                beforeNoteList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                beforeNoteList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 8016: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                afterNoteList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              afterNoteList_.addInt(input.readUInt32());
              break;
            }
            case 8018: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                afterNoteList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                afterNoteList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 9456: {

              savePageType_ = input.readUInt32();
              break;
            }
            case 14576: {

              timeLineEditTime_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          beforeNoteList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          afterNoteList_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.MusicBriefInfoOuterClass.internal_static_MusicBriefInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.MusicBriefInfoOuterClass.internal_static_MusicBriefInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo.class, emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo.Builder.class);
    }

    public static final int IMPORT_FROM_UGC_GUID_FIELD_NUMBER = 5;
    private long importFromUgcGuid_;
    /**
     * <code>uint64 import_from_ugc_guid = 5;</code>
     * @return The importFromUgcGuid.
     */
    @java.lang.Override
    public long getImportFromUgcGuid() {
      return importFromUgcGuid_;
    }

    public static final int CAN_SHARE_FIELD_NUMBER = 8;
    private boolean canShare_;
    /**
     * <code>bool can_share = 8;</code>
     * @return The canShare.
     */
    @java.lang.Override
    public boolean getCanShare() {
      return canShare_;
    }

    public static final int SETTLE_FIELD_NUMBER = 1;
    private boolean settle_;
    /**
     * <code>bool settle = 1;</code>
     * @return The settle.
     */
    @java.lang.Override
    public boolean getSettle() {
      return settle_;
    }

    public static final int MUSIC_ID_FIELD_NUMBER = 2;
    private int musicId_;
    /**
     * <code>uint32 music_id = 2;</code>
     * @return The musicId.
     */
    @java.lang.Override
    public int getMusicId() {
      return musicId_;
    }

    public static final int SAVE_PAGE_TYPE_FIELD_NUMBER = 1182;
    private int savePageType_;
    /**
     * <code>uint32 save_page_type = 1182;</code>
     * @return The savePageType.
     */
    @java.lang.Override
    public int getSavePageType() {
      return savePageType_;
    }

    public static final int POSITION_FIELD_NUMBER = 12;
    private int position_;
    /**
     * <code>uint32 position = 12;</code>
     * @return The position.
     */
    @java.lang.Override
    public int getPosition() {
      return position_;
    }

    public static final int AUTHOR_NICKNAME_FIELD_NUMBER = 10;
    private volatile java.lang.Object authorNickname_;
    /**
     * <code>string author_nickname = 10;</code>
     * @return The authorNickname.
     */
    @java.lang.Override
    public java.lang.String getAuthorNickname() {
      java.lang.Object ref = authorNickname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authorNickname_ = s;
        return s;
      }
    }
    /**
     * <code>string author_nickname = 10;</code>
     * @return The bytes for authorNickname.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAuthorNicknameBytes() {
      java.lang.Object ref = authorNickname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authorNickname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 15;
    private int version_;
    /**
     * <code>uint32 version = 15;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    public static final int CREATE_TIME_FIELD_NUMBER = 3;
    private int createTime_;
    /**
     * <code>uint32 create_time = 3;</code>
     * @return The createTime.
     */
    @java.lang.Override
    public int getCreateTime() {
      return createTime_;
    }

    public static final int AFTER_NOTE_LIST_FIELD_NUMBER = 1002;
    private com.google.protobuf.Internal.IntList afterNoteList_;
    /**
     * <code>repeated uint32 after_note_list = 1002;</code>
     * @return A list containing the afterNoteList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAfterNoteListList() {
      return afterNoteList_;
    }
    /**
     * <code>repeated uint32 after_note_list = 1002;</code>
     * @return The count of afterNoteList.
     */
    public int getAfterNoteListCount() {
      return afterNoteList_.size();
    }
    /**
     * <code>repeated uint32 after_note_list = 1002;</code>
     * @param index The index of the element to return.
     * @return The afterNoteList at the given index.
     */
    public int getAfterNoteList(int index) {
      return afterNoteList_.getInt(index);
    }
    private int afterNoteListMemoizedSerializedSize = -1;

    public static final int BEFORE_NOTE_LIST_FIELD_NUMBER = 982;
    private com.google.protobuf.Internal.IntList beforeNoteList_;
    /**
     * <code>repeated uint32 before_note_list = 982;</code>
     * @return A list containing the beforeNoteList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getBeforeNoteListList() {
      return beforeNoteList_;
    }
    /**
     * <code>repeated uint32 before_note_list = 982;</code>
     * @return The count of beforeNoteList.
     */
    public int getBeforeNoteListCount() {
      return beforeNoteList_.size();
    }
    /**
     * <code>repeated uint32 before_note_list = 982;</code>
     * @param index The index of the element to return.
     * @return The beforeNoteList at the given index.
     */
    public int getBeforeNoteList(int index) {
      return beforeNoteList_.getInt(index);
    }
    private int beforeNoteListMemoizedSerializedSize = -1;

    public static final int IS_PSN_PLATFORM_FIELD_NUMBER = 9;
    private boolean isPsnPlatform_;
    /**
     * <code>bool is_psn_platform = 9;</code>
     * @return The isPsnPlatform.
     */
    @java.lang.Override
    public boolean getIsPsnPlatform() {
      return isPsnPlatform_;
    }

    public static final int TIME_LINE_EDIT_TIME_FIELD_NUMBER = 1822;
    private int timeLineEditTime_;
    /**
     * <code>uint32 time_line_edit_time = 1822;</code>
     * @return The timeLineEditTime.
     */
    @java.lang.Override
    public int getTimeLineEditTime() {
      return timeLineEditTime_;
    }

    public static final int IS_CHANGED_AFTER_PUBLISH_FIELD_NUMBER = 11;
    private boolean isChangedAfterPublish_;
    /**
     * <code>bool is_changed_after_publish = 11;</code>
     * @return The isChangedAfterPublish.
     */
    @java.lang.Override
    public boolean getIsChangedAfterPublish() {
      return isChangedAfterPublish_;
    }

    public static final int SHARE_TIME_FIELD_NUMBER = 13;
    private int shareTime_;
    /**
     * <code>uint32 share_time = 13;</code>
     * @return The shareTime.
     */
    @java.lang.Override
    public int getShareTime() {
      return shareTime_;
    }

    public static final int MAX_SCORE_FIELD_NUMBER = 14;
    private int maxScore_;
    /**
     * <code>uint32 max_score = 14;</code>
     * @return The maxScore.
     */
    @java.lang.Override
    public int getMaxScore() {
      return maxScore_;
    }

    public static final int REAL_TIME_EDIT_TIME_FIELD_NUMBER = 576;
    private int realTimeEditTime_;
    /**
     * <code>uint32 real_time_edit_time = 576;</code>
     * @return The realTimeEditTime.
     */
    @java.lang.Override
    public int getRealTimeEditTime() {
      return realTimeEditTime_;
    }

    public static final int MUSIC_NOTE_COUNT_FIELD_NUMBER = 7;
    private int musicNoteCount_;
    /**
     * <code>uint32 music_note_count = 7;</code>
     * @return The musicNoteCount.
     */
    @java.lang.Override
    public int getMusicNoteCount() {
      return musicNoteCount_;
    }

    public static final int MUSIC_SHARE_ID_FIELD_NUMBER = 4;
    private long musicShareId_;
    /**
     * <code>uint64 music_share_id = 4;</code>
     * @return The musicShareId.
     */
    @java.lang.Override
    public long getMusicShareId() {
      return musicShareId_;
    }

    public static final int SCORE_FIELD_NUMBER = 6;
    private int score_;
    /**
     * <code>uint32 score = 6;</code>
     * @return The score.
     */
    @java.lang.Override
    public int getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (settle_ != false) {
        output.writeBool(1, settle_);
      }
      if (musicId_ != 0) {
        output.writeUInt32(2, musicId_);
      }
      if (createTime_ != 0) {
        output.writeUInt32(3, createTime_);
      }
      if (musicShareId_ != 0L) {
        output.writeUInt64(4, musicShareId_);
      }
      if (importFromUgcGuid_ != 0L) {
        output.writeUInt64(5, importFromUgcGuid_);
      }
      if (score_ != 0) {
        output.writeUInt32(6, score_);
      }
      if (musicNoteCount_ != 0) {
        output.writeUInt32(7, musicNoteCount_);
      }
      if (canShare_ != false) {
        output.writeBool(8, canShare_);
      }
      if (isPsnPlatform_ != false) {
        output.writeBool(9, isPsnPlatform_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorNickname_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, authorNickname_);
      }
      if (isChangedAfterPublish_ != false) {
        output.writeBool(11, isChangedAfterPublish_);
      }
      if (position_ != 0) {
        output.writeUInt32(12, position_);
      }
      if (shareTime_ != 0) {
        output.writeUInt32(13, shareTime_);
      }
      if (maxScore_ != 0) {
        output.writeUInt32(14, maxScore_);
      }
      if (version_ != 0) {
        output.writeUInt32(15, version_);
      }
      if (realTimeEditTime_ != 0) {
        output.writeUInt32(576, realTimeEditTime_);
      }
      if (getBeforeNoteListList().size() > 0) {
        output.writeUInt32NoTag(7858);
        output.writeUInt32NoTag(beforeNoteListMemoizedSerializedSize);
      }
      for (int i = 0; i < beforeNoteList_.size(); i++) {
        output.writeUInt32NoTag(beforeNoteList_.getInt(i));
      }
      if (getAfterNoteListList().size() > 0) {
        output.writeUInt32NoTag(8018);
        output.writeUInt32NoTag(afterNoteListMemoizedSerializedSize);
      }
      for (int i = 0; i < afterNoteList_.size(); i++) {
        output.writeUInt32NoTag(afterNoteList_.getInt(i));
      }
      if (savePageType_ != 0) {
        output.writeUInt32(1182, savePageType_);
      }
      if (timeLineEditTime_ != 0) {
        output.writeUInt32(1822, timeLineEditTime_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (settle_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, settle_);
      }
      if (musicId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, musicId_);
      }
      if (createTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, createTime_);
      }
      if (musicShareId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, musicShareId_);
      }
      if (importFromUgcGuid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, importFromUgcGuid_);
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, score_);
      }
      if (musicNoteCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, musicNoteCount_);
      }
      if (canShare_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, canShare_);
      }
      if (isPsnPlatform_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isPsnPlatform_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(authorNickname_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, authorNickname_);
      }
      if (isChangedAfterPublish_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isChangedAfterPublish_);
      }
      if (position_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, position_);
      }
      if (shareTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, shareTime_);
      }
      if (maxScore_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, maxScore_);
      }
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, version_);
      }
      if (realTimeEditTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(576, realTimeEditTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < beforeNoteList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(beforeNoteList_.getInt(i));
        }
        size += dataSize;
        if (!getBeforeNoteListList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        beforeNoteListMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < afterNoteList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(afterNoteList_.getInt(i));
        }
        size += dataSize;
        if (!getAfterNoteListList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        afterNoteListMemoizedSerializedSize = dataSize;
      }
      if (savePageType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1182, savePageType_);
      }
      if (timeLineEditTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1822, timeLineEditTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo other = (emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo) obj;

      if (getImportFromUgcGuid()
          != other.getImportFromUgcGuid()) return false;
      if (getCanShare()
          != other.getCanShare()) return false;
      if (getSettle()
          != other.getSettle()) return false;
      if (getMusicId()
          != other.getMusicId()) return false;
      if (getSavePageType()
          != other.getSavePageType()) return false;
      if (getPosition()
          != other.getPosition()) return false;
      if (!getAuthorNickname()
          .equals(other.getAuthorNickname())) return false;
      if (getVersion()
          != other.getVersion()) return false;
      if (getCreateTime()
          != other.getCreateTime()) return false;
      if (!getAfterNoteListList()
          .equals(other.getAfterNoteListList())) return false;
      if (!getBeforeNoteListList()
          .equals(other.getBeforeNoteListList())) return false;
      if (getIsPsnPlatform()
          != other.getIsPsnPlatform()) return false;
      if (getTimeLineEditTime()
          != other.getTimeLineEditTime()) return false;
      if (getIsChangedAfterPublish()
          != other.getIsChangedAfterPublish()) return false;
      if (getShareTime()
          != other.getShareTime()) return false;
      if (getMaxScore()
          != other.getMaxScore()) return false;
      if (getRealTimeEditTime()
          != other.getRealTimeEditTime()) return false;
      if (getMusicNoteCount()
          != other.getMusicNoteCount()) return false;
      if (getMusicShareId()
          != other.getMusicShareId()) return false;
      if (getScore()
          != other.getScore()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMPORT_FROM_UGC_GUID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getImportFromUgcGuid());
      hash = (37 * hash) + CAN_SHARE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCanShare());
      hash = (37 * hash) + SETTLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSettle());
      hash = (37 * hash) + MUSIC_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMusicId();
      hash = (37 * hash) + SAVE_PAGE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSavePageType();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getPosition();
      hash = (37 * hash) + AUTHOR_NICKNAME_FIELD_NUMBER;
      hash = (53 * hash) + getAuthorNickname().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCreateTime();
      if (getAfterNoteListCount() > 0) {
        hash = (37 * hash) + AFTER_NOTE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getAfterNoteListList().hashCode();
      }
      if (getBeforeNoteListCount() > 0) {
        hash = (37 * hash) + BEFORE_NOTE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getBeforeNoteListList().hashCode();
      }
      hash = (37 * hash) + IS_PSN_PLATFORM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsPsnPlatform());
      hash = (37 * hash) + TIME_LINE_EDIT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTimeLineEditTime();
      hash = (37 * hash) + IS_CHANGED_AFTER_PUBLISH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsChangedAfterPublish());
      hash = (37 * hash) + SHARE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getShareTime();
      hash = (37 * hash) + MAX_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getMaxScore();
      hash = (37 * hash) + REAL_TIME_EDIT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getRealTimeEditTime();
      hash = (37 * hash) + MUSIC_NOTE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getMusicNoteCount();
      hash = (37 * hash) + MUSIC_SHARE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMusicShareId());
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MusicBriefInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MusicBriefInfo)
        emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.MusicBriefInfoOuterClass.internal_static_MusicBriefInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.MusicBriefInfoOuterClass.internal_static_MusicBriefInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo.class, emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        importFromUgcGuid_ = 0L;

        canShare_ = false;

        settle_ = false;

        musicId_ = 0;

        savePageType_ = 0;

        position_ = 0;

        authorNickname_ = "";

        version_ = 0;

        createTime_ = 0;

        afterNoteList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        beforeNoteList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        isPsnPlatform_ = false;

        timeLineEditTime_ = 0;

        isChangedAfterPublish_ = false;

        shareTime_ = 0;

        maxScore_ = 0;

        realTimeEditTime_ = 0;

        musicNoteCount_ = 0;

        musicShareId_ = 0L;

        score_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.MusicBriefInfoOuterClass.internal_static_MusicBriefInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo build() {
        emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo buildPartial() {
        emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo result = new emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo(this);
        int from_bitField0_ = bitField0_;
        result.importFromUgcGuid_ = importFromUgcGuid_;
        result.canShare_ = canShare_;
        result.settle_ = settle_;
        result.musicId_ = musicId_;
        result.savePageType_ = savePageType_;
        result.position_ = position_;
        result.authorNickname_ = authorNickname_;
        result.version_ = version_;
        result.createTime_ = createTime_;
        if (((bitField0_ & 0x00000001) != 0)) {
          afterNoteList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.afterNoteList_ = afterNoteList_;
        if (((bitField0_ & 0x00000002) != 0)) {
          beforeNoteList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.beforeNoteList_ = beforeNoteList_;
        result.isPsnPlatform_ = isPsnPlatform_;
        result.timeLineEditTime_ = timeLineEditTime_;
        result.isChangedAfterPublish_ = isChangedAfterPublish_;
        result.shareTime_ = shareTime_;
        result.maxScore_ = maxScore_;
        result.realTimeEditTime_ = realTimeEditTime_;
        result.musicNoteCount_ = musicNoteCount_;
        result.musicShareId_ = musicShareId_;
        result.score_ = score_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo) {
          return mergeFrom((emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo other) {
        if (other == emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo.getDefaultInstance()) return this;
        if (other.getImportFromUgcGuid() != 0L) {
          setImportFromUgcGuid(other.getImportFromUgcGuid());
        }
        if (other.getCanShare() != false) {
          setCanShare(other.getCanShare());
        }
        if (other.getSettle() != false) {
          setSettle(other.getSettle());
        }
        if (other.getMusicId() != 0) {
          setMusicId(other.getMusicId());
        }
        if (other.getSavePageType() != 0) {
          setSavePageType(other.getSavePageType());
        }
        if (other.getPosition() != 0) {
          setPosition(other.getPosition());
        }
        if (!other.getAuthorNickname().isEmpty()) {
          authorNickname_ = other.authorNickname_;
          onChanged();
        }
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        if (other.getCreateTime() != 0) {
          setCreateTime(other.getCreateTime());
        }
        if (!other.afterNoteList_.isEmpty()) {
          if (afterNoteList_.isEmpty()) {
            afterNoteList_ = other.afterNoteList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAfterNoteListIsMutable();
            afterNoteList_.addAll(other.afterNoteList_);
          }
          onChanged();
        }
        if (!other.beforeNoteList_.isEmpty()) {
          if (beforeNoteList_.isEmpty()) {
            beforeNoteList_ = other.beforeNoteList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBeforeNoteListIsMutable();
            beforeNoteList_.addAll(other.beforeNoteList_);
          }
          onChanged();
        }
        if (other.getIsPsnPlatform() != false) {
          setIsPsnPlatform(other.getIsPsnPlatform());
        }
        if (other.getTimeLineEditTime() != 0) {
          setTimeLineEditTime(other.getTimeLineEditTime());
        }
        if (other.getIsChangedAfterPublish() != false) {
          setIsChangedAfterPublish(other.getIsChangedAfterPublish());
        }
        if (other.getShareTime() != 0) {
          setShareTime(other.getShareTime());
        }
        if (other.getMaxScore() != 0) {
          setMaxScore(other.getMaxScore());
        }
        if (other.getRealTimeEditTime() != 0) {
          setRealTimeEditTime(other.getRealTimeEditTime());
        }
        if (other.getMusicNoteCount() != 0) {
          setMusicNoteCount(other.getMusicNoteCount());
        }
        if (other.getMusicShareId() != 0L) {
          setMusicShareId(other.getMusicShareId());
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long importFromUgcGuid_ ;
      /**
       * <code>uint64 import_from_ugc_guid = 5;</code>
       * @return The importFromUgcGuid.
       */
      @java.lang.Override
      public long getImportFromUgcGuid() {
        return importFromUgcGuid_;
      }
      /**
       * <code>uint64 import_from_ugc_guid = 5;</code>
       * @param value The importFromUgcGuid to set.
       * @return This builder for chaining.
       */
      public Builder setImportFromUgcGuid(long value) {
        
        importFromUgcGuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 import_from_ugc_guid = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearImportFromUgcGuid() {
        
        importFromUgcGuid_ = 0L;
        onChanged();
        return this;
      }

      private boolean canShare_ ;
      /**
       * <code>bool can_share = 8;</code>
       * @return The canShare.
       */
      @java.lang.Override
      public boolean getCanShare() {
        return canShare_;
      }
      /**
       * <code>bool can_share = 8;</code>
       * @param value The canShare to set.
       * @return This builder for chaining.
       */
      public Builder setCanShare(boolean value) {
        
        canShare_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool can_share = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCanShare() {
        
        canShare_ = false;
        onChanged();
        return this;
      }

      private boolean settle_ ;
      /**
       * <code>bool settle = 1;</code>
       * @return The settle.
       */
      @java.lang.Override
      public boolean getSettle() {
        return settle_;
      }
      /**
       * <code>bool settle = 1;</code>
       * @param value The settle to set.
       * @return This builder for chaining.
       */
      public Builder setSettle(boolean value) {
        
        settle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool settle = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSettle() {
        
        settle_ = false;
        onChanged();
        return this;
      }

      private int musicId_ ;
      /**
       * <code>uint32 music_id = 2;</code>
       * @return The musicId.
       */
      @java.lang.Override
      public int getMusicId() {
        return musicId_;
      }
      /**
       * <code>uint32 music_id = 2;</code>
       * @param value The musicId to set.
       * @return This builder for chaining.
       */
      public Builder setMusicId(int value) {
        
        musicId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 music_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMusicId() {
        
        musicId_ = 0;
        onChanged();
        return this;
      }

      private int savePageType_ ;
      /**
       * <code>uint32 save_page_type = 1182;</code>
       * @return The savePageType.
       */
      @java.lang.Override
      public int getSavePageType() {
        return savePageType_;
      }
      /**
       * <code>uint32 save_page_type = 1182;</code>
       * @param value The savePageType to set.
       * @return This builder for chaining.
       */
      public Builder setSavePageType(int value) {
        
        savePageType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 save_page_type = 1182;</code>
       * @return This builder for chaining.
       */
      public Builder clearSavePageType() {
        
        savePageType_ = 0;
        onChanged();
        return this;
      }

      private int position_ ;
      /**
       * <code>uint32 position = 12;</code>
       * @return The position.
       */
      @java.lang.Override
      public int getPosition() {
        return position_;
      }
      /**
       * <code>uint32 position = 12;</code>
       * @param value The position to set.
       * @return This builder for chaining.
       */
      public Builder setPosition(int value) {
        
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 position = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object authorNickname_ = "";
      /**
       * <code>string author_nickname = 10;</code>
       * @return The authorNickname.
       */
      public java.lang.String getAuthorNickname() {
        java.lang.Object ref = authorNickname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authorNickname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string author_nickname = 10;</code>
       * @return The bytes for authorNickname.
       */
      public com.google.protobuf.ByteString
          getAuthorNicknameBytes() {
        java.lang.Object ref = authorNickname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authorNickname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string author_nickname = 10;</code>
       * @param value The authorNickname to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorNickname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        authorNickname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string author_nickname = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorNickname() {
        
        authorNickname_ = getDefaultInstance().getAuthorNickname();
        onChanged();
        return this;
      }
      /**
       * <code>string author_nickname = 10;</code>
       * @param value The bytes for authorNickname to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorNicknameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        authorNickname_ = value;
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <code>uint32 version = 15;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <code>uint32 version = 15;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 version = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = 0;
        onChanged();
        return this;
      }

      private int createTime_ ;
      /**
       * <code>uint32 create_time = 3;</code>
       * @return The createTime.
       */
      @java.lang.Override
      public int getCreateTime() {
        return createTime_;
      }
      /**
       * <code>uint32 create_time = 3;</code>
       * @param value The createTime to set.
       * @return This builder for chaining.
       */
      public Builder setCreateTime(int value) {
        
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 create_time = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreateTime() {
        
        createTime_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList afterNoteList_ = emptyIntList();
      private void ensureAfterNoteListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          afterNoteList_ = mutableCopy(afterNoteList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 after_note_list = 1002;</code>
       * @return A list containing the afterNoteList.
       */
      public java.util.List<java.lang.Integer>
          getAfterNoteListList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(afterNoteList_) : afterNoteList_;
      }
      /**
       * <code>repeated uint32 after_note_list = 1002;</code>
       * @return The count of afterNoteList.
       */
      public int getAfterNoteListCount() {
        return afterNoteList_.size();
      }
      /**
       * <code>repeated uint32 after_note_list = 1002;</code>
       * @param index The index of the element to return.
       * @return The afterNoteList at the given index.
       */
      public int getAfterNoteList(int index) {
        return afterNoteList_.getInt(index);
      }
      /**
       * <code>repeated uint32 after_note_list = 1002;</code>
       * @param index The index to set the value at.
       * @param value The afterNoteList to set.
       * @return This builder for chaining.
       */
      public Builder setAfterNoteList(
          int index, int value) {
        ensureAfterNoteListIsMutable();
        afterNoteList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 after_note_list = 1002;</code>
       * @param value The afterNoteList to add.
       * @return This builder for chaining.
       */
      public Builder addAfterNoteList(int value) {
        ensureAfterNoteListIsMutable();
        afterNoteList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 after_note_list = 1002;</code>
       * @param values The afterNoteList to add.
       * @return This builder for chaining.
       */
      public Builder addAllAfterNoteList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAfterNoteListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, afterNoteList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 after_note_list = 1002;</code>
       * @return This builder for chaining.
       */
      public Builder clearAfterNoteList() {
        afterNoteList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList beforeNoteList_ = emptyIntList();
      private void ensureBeforeNoteListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          beforeNoteList_ = mutableCopy(beforeNoteList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 before_note_list = 982;</code>
       * @return A list containing the beforeNoteList.
       */
      public java.util.List<java.lang.Integer>
          getBeforeNoteListList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(beforeNoteList_) : beforeNoteList_;
      }
      /**
       * <code>repeated uint32 before_note_list = 982;</code>
       * @return The count of beforeNoteList.
       */
      public int getBeforeNoteListCount() {
        return beforeNoteList_.size();
      }
      /**
       * <code>repeated uint32 before_note_list = 982;</code>
       * @param index The index of the element to return.
       * @return The beforeNoteList at the given index.
       */
      public int getBeforeNoteList(int index) {
        return beforeNoteList_.getInt(index);
      }
      /**
       * <code>repeated uint32 before_note_list = 982;</code>
       * @param index The index to set the value at.
       * @param value The beforeNoteList to set.
       * @return This builder for chaining.
       */
      public Builder setBeforeNoteList(
          int index, int value) {
        ensureBeforeNoteListIsMutable();
        beforeNoteList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 before_note_list = 982;</code>
       * @param value The beforeNoteList to add.
       * @return This builder for chaining.
       */
      public Builder addBeforeNoteList(int value) {
        ensureBeforeNoteListIsMutable();
        beforeNoteList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 before_note_list = 982;</code>
       * @param values The beforeNoteList to add.
       * @return This builder for chaining.
       */
      public Builder addAllBeforeNoteList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBeforeNoteListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, beforeNoteList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 before_note_list = 982;</code>
       * @return This builder for chaining.
       */
      public Builder clearBeforeNoteList() {
        beforeNoteList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private boolean isPsnPlatform_ ;
      /**
       * <code>bool is_psn_platform = 9;</code>
       * @return The isPsnPlatform.
       */
      @java.lang.Override
      public boolean getIsPsnPlatform() {
        return isPsnPlatform_;
      }
      /**
       * <code>bool is_psn_platform = 9;</code>
       * @param value The isPsnPlatform to set.
       * @return This builder for chaining.
       */
      public Builder setIsPsnPlatform(boolean value) {
        
        isPsnPlatform_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_psn_platform = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsPsnPlatform() {
        
        isPsnPlatform_ = false;
        onChanged();
        return this;
      }

      private int timeLineEditTime_ ;
      /**
       * <code>uint32 time_line_edit_time = 1822;</code>
       * @return The timeLineEditTime.
       */
      @java.lang.Override
      public int getTimeLineEditTime() {
        return timeLineEditTime_;
      }
      /**
       * <code>uint32 time_line_edit_time = 1822;</code>
       * @param value The timeLineEditTime to set.
       * @return This builder for chaining.
       */
      public Builder setTimeLineEditTime(int value) {
        
        timeLineEditTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 time_line_edit_time = 1822;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeLineEditTime() {
        
        timeLineEditTime_ = 0;
        onChanged();
        return this;
      }

      private boolean isChangedAfterPublish_ ;
      /**
       * <code>bool is_changed_after_publish = 11;</code>
       * @return The isChangedAfterPublish.
       */
      @java.lang.Override
      public boolean getIsChangedAfterPublish() {
        return isChangedAfterPublish_;
      }
      /**
       * <code>bool is_changed_after_publish = 11;</code>
       * @param value The isChangedAfterPublish to set.
       * @return This builder for chaining.
       */
      public Builder setIsChangedAfterPublish(boolean value) {
        
        isChangedAfterPublish_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_changed_after_publish = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsChangedAfterPublish() {
        
        isChangedAfterPublish_ = false;
        onChanged();
        return this;
      }

      private int shareTime_ ;
      /**
       * <code>uint32 share_time = 13;</code>
       * @return The shareTime.
       */
      @java.lang.Override
      public int getShareTime() {
        return shareTime_;
      }
      /**
       * <code>uint32 share_time = 13;</code>
       * @param value The shareTime to set.
       * @return This builder for chaining.
       */
      public Builder setShareTime(int value) {
        
        shareTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 share_time = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearShareTime() {
        
        shareTime_ = 0;
        onChanged();
        return this;
      }

      private int maxScore_ ;
      /**
       * <code>uint32 max_score = 14;</code>
       * @return The maxScore.
       */
      @java.lang.Override
      public int getMaxScore() {
        return maxScore_;
      }
      /**
       * <code>uint32 max_score = 14;</code>
       * @param value The maxScore to set.
       * @return This builder for chaining.
       */
      public Builder setMaxScore(int value) {
        
        maxScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 max_score = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxScore() {
        
        maxScore_ = 0;
        onChanged();
        return this;
      }

      private int realTimeEditTime_ ;
      /**
       * <code>uint32 real_time_edit_time = 576;</code>
       * @return The realTimeEditTime.
       */
      @java.lang.Override
      public int getRealTimeEditTime() {
        return realTimeEditTime_;
      }
      /**
       * <code>uint32 real_time_edit_time = 576;</code>
       * @param value The realTimeEditTime to set.
       * @return This builder for chaining.
       */
      public Builder setRealTimeEditTime(int value) {
        
        realTimeEditTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 real_time_edit_time = 576;</code>
       * @return This builder for chaining.
       */
      public Builder clearRealTimeEditTime() {
        
        realTimeEditTime_ = 0;
        onChanged();
        return this;
      }

      private int musicNoteCount_ ;
      /**
       * <code>uint32 music_note_count = 7;</code>
       * @return The musicNoteCount.
       */
      @java.lang.Override
      public int getMusicNoteCount() {
        return musicNoteCount_;
      }
      /**
       * <code>uint32 music_note_count = 7;</code>
       * @param value The musicNoteCount to set.
       * @return This builder for chaining.
       */
      public Builder setMusicNoteCount(int value) {
        
        musicNoteCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 music_note_count = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMusicNoteCount() {
        
        musicNoteCount_ = 0;
        onChanged();
        return this;
      }

      private long musicShareId_ ;
      /**
       * <code>uint64 music_share_id = 4;</code>
       * @return The musicShareId.
       */
      @java.lang.Override
      public long getMusicShareId() {
        return musicShareId_;
      }
      /**
       * <code>uint64 music_share_id = 4;</code>
       * @param value The musicShareId to set.
       * @return This builder for chaining.
       */
      public Builder setMusicShareId(long value) {
        
        musicShareId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 music_share_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMusicShareId() {
        
        musicShareId_ = 0L;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <code>uint32 score = 6;</code>
       * @return The score.
       */
      @java.lang.Override
      public int getScore() {
        return score_;
      }
      /**
       * <code>uint32 score = 6;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 score = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MusicBriefInfo)
    }

    // @@protoc_insertion_point(class_scope:MusicBriefInfo)
    private static final emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo();
    }

    public static emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MusicBriefInfo>
        PARSER = new com.google.protobuf.AbstractParser<MusicBriefInfo>() {
      @java.lang.Override
      public MusicBriefInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MusicBriefInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MusicBriefInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MusicBriefInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.MusicBriefInfoOuterClass.MusicBriefInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MusicBriefInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MusicBriefInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024MusicBriefInfo.proto\"\341\003\n\016MusicBriefInf" +
      "o\022\034\n\024import_from_ugc_guid\030\005 \001(\004\022\021\n\tcan_s" +
      "hare\030\010 \001(\010\022\016\n\006settle\030\001 \001(\010\022\020\n\010music_id\030\002" +
      " \001(\r\022\027\n\016save_page_type\030\236\t \001(\r\022\020\n\010positio" +
      "n\030\014 \001(\r\022\027\n\017author_nickname\030\n \001(\t\022\017\n\007vers" +
      "ion\030\017 \001(\r\022\023\n\013create_time\030\003 \001(\r\022\030\n\017after_" +
      "note_list\030\352\007 \003(\r\022\031\n\020before_note_list\030\326\007 " +
      "\003(\r\022\027\n\017is_psn_platform\030\t \001(\010\022\034\n\023time_lin" +
      "e_edit_time\030\236\016 \001(\r\022 \n\030is_changed_after_p" +
      "ublish\030\013 \001(\010\022\022\n\nshare_time\030\r \001(\r\022\021\n\tmax_" +
      "score\030\016 \001(\r\022\034\n\023real_time_edit_time\030\300\004 \001(" +
      "\r\022\030\n\020music_note_count\030\007 \001(\r\022\026\n\016music_sha" +
      "re_id\030\004 \001(\004\022\r\n\005score\030\006 \001(\rB\033\n\031emu.grassc" +
      "utter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_MusicBriefInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MusicBriefInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MusicBriefInfo_descriptor,
        new java.lang.String[] { "ImportFromUgcGuid", "CanShare", "Settle", "MusicId", "SavePageType", "Position", "AuthorNickname", "Version", "CreateTime", "AfterNoteList", "BeforeNoteList", "IsPsnPlatform", "TimeLineEditTime", "IsChangedAfterPublish", "ShareTime", "MaxScore", "RealTimeEditTime", "MusicNoteCount", "MusicShareId", "Score", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
